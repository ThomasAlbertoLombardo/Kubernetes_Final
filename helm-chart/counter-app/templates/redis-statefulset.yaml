apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-{{ .Values.redis.name }}
spec:
  serviceName: {{ .Release.Name }}-{{ .Values.redis.service.name }}
  replicas: {{ .Values.redis.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.redis.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.redis.name }}
    spec:
      containers:
      - name: {{ .Values.redis.name }}
        image: {{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}
        ports:
        - containerPort: {{ .Values.redis.service.targetPort }}
        volumeMounts:
        - name: redis-storage
          mountPath: /data
        resources:
          {{- toYaml .Values.redis.resources | nindent 10 }}
  volumeClaimTemplates:
  - metadata:
      name: redis-storage
    spec:
      accessModes: [ "{{ .Values.redis.persistence.accessMode }}" ]
      {{- if .Values.redis.persistence.storageClass }}
      storageClassName: {{ .Values.redis.persistence.storageClass }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.redis.persistence.size }}